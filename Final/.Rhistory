# lower_bound <- Q1 - 1.5 * IQR_value
# upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
print ("Some potential outliers are:")
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
print("The five number summary of the variable are:")
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
You can also calculate the upper and lower bounds using IQR method
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
print("The five number summary of the variable are:")
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
print ("Some potential outliers are:")
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
print("The five number summary of the variable are:")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
print ("Some potential outliers are:")
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
print("The five number summary of the variable are:")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
# # Display potential outliers
print ("Some potential outliers are:")
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
print ("Some potential outliers are:")
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
print("Some potential outliers are:")
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
print("Some potential outliers are:", outliers)
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
print("Some potential outliers are:") + outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance")
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Balance Boxplot", ylab = "Total Balance",col = 'pink')
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(file$rep_education), main = "Education Distribution", xlab = "Education Level", ylab = "Frequency",col = my_colors2)
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Distribution", xlab = "Education Level", ylab = "Frequency",col = my_colors2)
library(ggplot2)
# Filtering out missing values from the 'rep_income' column
income_without_na <- na.omit(file$rep_income)
# Creating a histogram using ggplot with non-missing values only
ggplot(data.frame(rep_income = income_without_na), aes(x = rep_income)) +
geom_histogram(fill = 'lightpink', color = 'black', bins = 30) +  # Adjust bins as needed
labs(title = 'Annual Income Reported By Applicants (Excluding Missing Values)', x = 'Annual Income', y = 'Frequency')
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Available Balance For All Credit Products", ylab = "Total Available Balance",col = 'pink')
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution", xlab = "Indicator of default", ylab = "Frequency", col = my_colors)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution", xlab = "Indicator of default", ylab = "Frequency", col = my_colors)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution", xlab = "Indicator of default", ylab = "Frequency", col = my_colors) + legend("topright", legend = c("Bar 1", "Bar 2"))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months", xlab = "Indicator of default", ylab = "Frequency", col = my_colors)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default", ylab = "Frequency", col = my_colors)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default", ylab = "Frequency", col = my_colors, cex.sub = 1)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default", ylab = "Frequency", col = my_colors, cex.sub = 0.5)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default", ylab = "Frequency", col = my_colors, cex.sub = 0.8)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default", ylab = "Frequency", col = my_colors, cex.sub = 0.7)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default", ylab = "Frequency", col = my_colors, cex.sub = 0.6)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6)
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Distribution", xlab = "Education Level", ylab = "Frequency",col = my_colors2)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6,  ylim = c(0, max(values) * 1.2))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6,  ylim = c(0, max(Def_ind) * 1.2))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6,  ylim = c(0, max(new_file$Def_ind) * 1.2))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6,  ylim = c(0, max(new_file$Def_ind) * 0.5))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6,  ylim = c(0, max(new_file$Def_ind) * 2))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6,  ylim = c(0, max(new_file$Def_ind) +20))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6,  ylim = c(0, max(new_file$Def_ind)))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6)
ylim <- c(0, max(Def_ind) * 1.2)  # Extend the y-axis by 20% above the maximum frequency
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6)
ylim <- c(0, max(new_file$Def_ind) * 1.2)  # Extend the y-axis by 20% above the maximum frequency
axis(2, at = pretty(ylim), labels = pretty(ylim))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2)
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6, ylim = c(0,20000))
# ylim <- c(0, max(new_file$Def_ind) * 1.2)  # Extend the y-axis by 20% above the maximum frequency
# axis(2, at = pretty(ylim), labels = pretty(ylim))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, stat ="identity")
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0.5, ))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0.5,3))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0.5,15))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0,20))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0,100))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0,1))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0,6))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0.1,6))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(2,6))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(1.5,6))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(1.5,6), ylim = c(0,20000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(1.5,6), ylim = c(0,15000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0.5,6), ylim = c(0,15000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(1.5,6), ylim = c(0,15000))
nrow(file)
ncol(file)
colnames(file)
str(file)
# Check for missing values in columns and calculate percentage
missing_cols <- colSums(is.na(file)) > 0
cols_with_missing <- names(missing_cols[missing_cols])
missing_percentage <- colSums(is.na(file[cols_with_missing])) / nrow(file) * 100
# Display columns with missing values and their respective percentages
missing_info <- data.frame(Column = cols_with_missing, MissingPercentage = missing_percentage)
print(missing_info)
# file[ , -c(17,19)]
new_file <- na.omit(your_data)
# file[ , -c(17,19)]
new_file <- na.omit(file)
# file[ , -c(17,19)]
new_file <- na.omit(file)
# file[ , -c(17,19)]
new_file <- na.omit(file)
new_file
nrow(new_file)
ncol(new_file)
summary(new_file)
# Calculate mean
mean_num_card_inq <- mean(new_file$num_card_inq_24_month, na.rm = TRUE)
# Calculate mode (custom function)
mode_function <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_num_card_inq <- mode_function(new_file$num_card_inq_24_month)
# Calculate median
median_num_card_inq <- median(new_file$num_card_inq_24_month, na.rm = TRUE)
# Print mean, mode, and median for num_card_inq_24_month
print(paste("Mean for num_card_inq_24_month:", mean_num_card_inq))
print(paste("Mode for num_card_inq_24_month:", mode_num_card_inq))
print(paste("Median for num_card_inq_24_month:", median_num_card_inq))
print("num_card_inq_24_month has a right skewed shape")
print("***********")
#######################
# Calculate mean
mean_tot_amount_past_due <- mean(new_file$tot_amount_currently_past_due, na.rm = TRUE)
# Calculate mode (custom function)
mode_function <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_tot_amount_past_due <- mode_function(new_file$tot_amount_currently_past_due)
# Calculate median
median_tot_amount_past_due <- median(new_file$tot_amount_currently_past_due, na.rm = TRUE)
# Print mean, mode, and median for tot_amount_currently_past_due
print(paste("Mean for tot_amount_currently_past_due:", mean_tot_amount_past_due))
print(paste("Mode for tot_amount_currently_past_due:", mode_tot_amount_past_due))
print(paste("Median for tot_amount_currently_past_due:", median_tot_amount_past_due))
print("tot_amount_currently_past_due has a right skewed shape")
print("***********")
#######################
# Calculate mean
mean_credit_age <- mean(new_file$credit_age, na.rm = TRUE)
# Calculate mode (custom function)
mode_function <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_credit_age <- mode_function(new_file$credit_age)
# Calculate median
median_credit_age <- median(new_file$credit_age, na.rm = TRUE)
# Print mean, mode, and median for credit_age
print(paste("Mean for credit_age:", mean_credit_age))
print(paste("Mode for credit_age:", mode_credit_age))
print(paste("Median for credit_age:", median_credit_age))
print("credit_age has a left skewed shape")
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Value",col = "purple")
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Values",col = "lightblue")
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Values",col = "lightpink")
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Value",col = "purple")
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Values",col = "lightblue")
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age",col = "lightpink")
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Credit card inquiries",col = "purple", ylim = c(0,12000))
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Credit accounts past due",col = "lightblue",ylim = c(0,18000))
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age in months",col = "lightpink", ylim = c(0,5000))
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Credit card inquiries",col = "purple", ylim = c(0,15000))
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Credit accounts past due",col = "lightblue",ylim = c(0,18000))
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age in months",col = "lightpink", ylim = c(0,5000))
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Credit card inquiries",col = "purple", ylim = c(0,15000))
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Credit accounts past due",col = "lightblue",ylim = c(0,20000))
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age in months",col = "lightpink", ylim = c(0,5000))
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Credit card inquiries",col = "purple", ylim = c(0,15000))
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Credit accounts past due",col = "lightblue",ylim = c(0,18000))
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age in months",col = "lightpink", ylim = c(0,5000))
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Credit card inquiries",col = "purple", ylim = c(0,15000))
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Credit accounts past due",col = "lightblue",ylim = c(0,20000))
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age in months",col = "lightpink", ylim = c(0,5000))
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Credit card inquiries",col = "purple", xlim =c(0,21000),ylim = c(0,15000))
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Credit accounts past due",col = "lightblue",xlim =c(0,21000), ylim = c(0,20000))
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age in months",col = "lightpink", xlim =c(0,21000), ylim = c(0,5000))
# Plot histograms for each variable
hist(new_file$num_card_inq_24_month, main = "Number of credit card inquiries in the last 24 months", xlab = "Credit card inquiries",col = "purple",ylim = c(0,15000))
hist(new_file$tot_amount_currently_past_due, main = "Total amount past due currently for all credit accounts", xlab = "Credit accounts past due",col = "lightblue", ylim = c(0,20000))
hist(new_file$credit_age, main = "Age in months of first credit product obtained by the applicant", xlab = "Age in months",col = "lightpink", ylim = c(0,5000))
# Creating a vector of colors
my_colors <- c("skyblue", "salmon")
# Plotting a bar graph for Def_Ind column
barplot(table(new_file$Def_ind), main = "Indicator of Default Distribution",sub = "Default means no payments for 3 consecutive months & After an account was approved and opened with bank XYZ in the past 18 months", xlab = "Indicator of default (0 = not defaulted, 1 = defaulted)", ylab = "Frequency", col = my_colors, cex.sub = 0.6, ylim = c(0,20000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(1.5,6), ylim = c(0,15000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(1.5,6), ylim = c(0,15000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2, xlim = c(0.5,6), ylim = c(0,15000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2,ylim = c(0,15000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2,ylim = c(0,12000))
# (table for categorical)
my_colors2 <- c("skyblue", "salmon","lightpink","purple")
# Plotting a bar graph for rep_education column
barplot(table(new_file$rep_education), main = "Education Levels Distribution (Reported by Applicants)", xlab = "Education Level", ylab = "Frequency",col = my_colors2,ylim = c(0,12000))
library(ggplot2)
# Filtering out missing values from the 'rep_income' column
income_without_na <- na.omit(file$rep_income)
# Creating a histogram using ggplot with non-missing values only
ggplot(data.frame(rep_income = income_without_na), aes(x = rep_income)) +
geom_histogram(fill = 'lightpink', color = 'black', bins = 30) +  # Adjust bins as needed
labs(title = 'Annual Income Reported By Applicants (Excluding Missing Values)', x = 'Annual Income', y = 'Frequency')
# (table for categorical)
# Plotting a boxplot for tot_balance variable
boxplot(new_file$tot_balance, main = "Total Available Balance For All Credit Products", ylab = "Total Available Balance",col = 'pink')
# Calculate the five-number summary using quantile function
quantile(new_file$tot_balance, probs = c(0, 0.25, 0.5, 0.75, 1))
#You can also calculate the upper and lower bounds using IQR method
Q1 <- quantile(new_file$tot_balance, 0.25)
Q3 <- quantile(new_file$tot_balance, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# # Display potential outliers
outliers <- new_file$tot_balance[new_file$tot_balance < lower_bound | new_file$tot_balance > upper_bound]
outliers
